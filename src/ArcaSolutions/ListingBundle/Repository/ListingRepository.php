<?php

namespace ArcaSolutions\ListingBundle\Repository;

use ArcaSolutions\CoreBundle\Interfaces\EntityModulesRowInterface;
use ArcaSolutions\CoreBundle\Repository\EntityModulesRowRepository;
use Doctrine\ORM\Mapping\PostPersist;
use Doctrine\ORM\Mapping\PostUpdate;
use Doctrine\ORM\Mapping\PreRemove;

/**
 * ListingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
final class ListingRepository extends EntityModulesRowRepository implements EntityModulesRowInterface
{
    /**
     * @PostPersist()
     * @PostUpdate()
     */
    public function insertElastic()
    {
//        $index = "domain1";
//        $type = "listing";
//
//        $elasticaClient = new Elastica\Client(array(
//            'host' => 'localhost',
//            'port' => 9200
//        ));
//
//        $elasticaIndex = $elasticaClient->getIndex($index);
//        $elasticaType = $elasticaIndex->getType($type);
//
//        $categories = array(1, 2, 3);
//
//        $geoLocation = "{$this->getLatitude()},{$this->getLongitude()}";
//        $customKeywords = "damn this elasticsearch works just fine!";
//
//        $canBeClaimed = ($this->getClaimDisable() == "n");
//
//        $document = array(
//            "id"            => $this->getId(),
//            "promotionId"   => $this->getPromotionId(),
//            "categoryId"    => $categories,
//            "averageReview" => $this->getAvgReview(),
//            "views"         => $this->getNumberViews(),
//            "price"         => $this->getPrice(),
//            "title"         => $this->getTitle(),
//            "email"         => $this->getEmail(),
//            "url"           => $this->getUrl(),
//            "zipcode"       => $this->getZipCode(),
//            "phone"         => $this->getPhone(),
//            "fax"           => $this->getFax(),
//            "description"   => $this->getDescription(),
//            "level"         => $this->getLevel(),
//            "geolocation"   => $geoLocation,
//            "status"        => $status,
//            "claim"         => $canBeClaimed,
//            "searchInfo"    => array(
//                "keyword"  => $this->getFulltextsearchKeyword(),
//                "custom"   => $customKeywords,
//                "location" => $this->getFulltextsearchWhere(),
//            )
//        );
//
//        $elasticaType->addDocument(new \Elastica\Document($this->getId(), $document));
    }

    /**
     * @PreRemove()
     */
    public function removeElastic()
    {
//        $index = "domain1";
//        $type = "listing";
//
//        $elasticaClient = new \Elastica\Client(array('host' => 'localhost', 'port' => 9200));
//        $elasticaIndex = $elasticaClient->getIndex($index);
//        $elasticaType = $elasticaIndex->getType($type);
//
//        echo '<pre>';
//        var_dump($this->getId());
//        echo '</pre>';
//        exit;
//
//        $elasticaType->deleteById($this->getId());
    }

    /**
     * Returns module name in lowercase
     *
     * @return string
     */
    function getModuleName()
    {
        return 'listing';
    }
}
